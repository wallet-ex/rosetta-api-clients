/**
 * Rosetta
 * Build Once. Integrate Your Blockchain Everywhere.
 *
 * OpenAPI spec version: 1.4.12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { BlockIdentifier } from './BlockIdentifier';
import { Transaction } from './Transaction';
import { HttpFile } from '../http/http';

/**
* Blocks contain an array of Transactions that occurred at a particular BlockIdentifier. A hard requirement for blocks returned by Rosetta implementations is that they MUST be _inalterable_: once a client has requested and received a block identified by a specific BlockIndentifier, all future calls for that same BlockIdentifier must return the same block contents.
*/
export class Block {
    'blockIdentifier': BlockIdentifier;
    'parentBlockIdentifier': BlockIdentifier;
    /**
    * The timestamp of the block in milliseconds since the Unix Epoch. The timestamp is stored in milliseconds because some blockchains produce blocks more often than once a second.
    */
    'timestamp': number;
    'transactions': Array<Transaction>;
    'metadata'?: any;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "blockIdentifier",
            "baseName": "block_identifier",
            "type": "BlockIdentifier",
            "format": ""
        },
        {
            "name": "parentBlockIdentifier",
            "baseName": "parent_block_identifier",
            "type": "BlockIdentifier",
            "format": ""
        },
        {
            "name": "timestamp",
            "baseName": "timestamp",
            "type": "number",
            "format": "int64"
        },
        {
            "name": "transactions",
            "baseName": "transactions",
            "type": "Array<Transaction>",
            "format": ""
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "any",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Block.attributeTypeMap;
    }

    public constructor() {
    }
}

