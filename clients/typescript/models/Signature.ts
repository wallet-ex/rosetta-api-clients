/**
 * Rosetta
 * Build Once. Integrate Your Blockchain Everywhere.
 *
 * OpenAPI spec version: 1.4.12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { PublicKey } from './PublicKey';
import { SignatureType } from './SignatureType';
import { SigningPayload } from './SigningPayload';
import { HttpFile } from '../http/http';

/**
* Signature contains the payload that was signed, the public keys of the keypairs used to produce the signature, the signature (encoded in hex), and the SignatureType. PublicKey is often times not known during construction of the signing payloads but may be needed to combine signatures properly.
*/
export class Signature {
    'signingPayload': SigningPayload;
    'publicKey': PublicKey;
    'signatureType': SignatureType;
    'hexBytes': string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "signingPayload",
            "baseName": "signing_payload",
            "type": "SigningPayload",
            "format": ""
        },
        {
            "name": "publicKey",
            "baseName": "public_key",
            "type": "PublicKey",
            "format": ""
        },
        {
            "name": "signatureType",
            "baseName": "signature_type",
            "type": "SignatureType",
            "format": ""
        },
        {
            "name": "hexBytes",
            "baseName": "hex_bytes",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Signature.attributeTypeMap;
    }

    public constructor() {
    }
}

