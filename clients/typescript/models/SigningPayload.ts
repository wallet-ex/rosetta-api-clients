/**
 * Rosetta
 * Build Once. Integrate Your Blockchain Everywhere.
 *
 * OpenAPI spec version: 1.4.12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AccountIdentifier } from './AccountIdentifier';
import { SignatureType } from './SignatureType';
import { HttpFile } from '../http/http';

/**
* SigningPayload is signed by the client with the keypair associated with an AccountIdentifier using the specified SignatureType. SignatureType can be optionally populated if there is a restriction on the signature scheme that can be used to sign the payload.
*/
export class SigningPayload {
    /**
    * [DEPRECATED by `account_identifier` in `v1.4.4`] The network-specific address of the account that should sign the payload.
    */
    'address'?: string;
    'accountIdentifier'?: AccountIdentifier;
    /**
    * Hex-encoded string of the payload bytes.
    */
    'hexBytes': string;
    'signatureType'?: SignatureType;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "address",
            "baseName": "address",
            "type": "string",
            "format": ""
        },
        {
            "name": "accountIdentifier",
            "baseName": "account_identifier",
            "type": "AccountIdentifier",
            "format": ""
        },
        {
            "name": "hexBytes",
            "baseName": "hex_bytes",
            "type": "string",
            "format": ""
        },
        {
            "name": "signatureType",
            "baseName": "signature_type",
            "type": "SignatureType",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return SigningPayload.attributeTypeMap;
    }

    public constructor() {
    }
}

