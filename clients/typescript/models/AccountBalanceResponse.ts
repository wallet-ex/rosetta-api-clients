/**
 * Rosetta
 * Build Once. Integrate Your Blockchain Everywhere.
 *
 * OpenAPI spec version: 1.4.12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Amount } from './Amount';
import { BlockIdentifier } from './BlockIdentifier';
import { HttpFile } from '../http/http';

/**
* An AccountBalanceResponse is returned on the /account/balance endpoint. If an account has a balance for each AccountIdentifier describing it (ex: an ERC-20 token balance on a few smart contracts), an account balance request must be made with each AccountIdentifier. The `coins` field was removed and replaced by by `/account/coins` in `v1.4.7`.
*/
export class AccountBalanceResponse {
    'blockIdentifier': BlockIdentifier;
    /**
    * A single account may have a balance in multiple currencies.
    */
    'balances': Array<Amount>;
    /**
    * Account-based blockchains that utilize a nonce or sequence number should include that number in the metadata. This number could be unique to the identifier or global across the account address.
    */
    'metadata'?: any;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "blockIdentifier",
            "baseName": "block_identifier",
            "type": "BlockIdentifier",
            "format": ""
        },
        {
            "name": "balances",
            "baseName": "balances",
            "type": "Array<Amount>",
            "format": ""
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "any",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return AccountBalanceResponse.attributeTypeMap;
    }

    public constructor() {
    }
}

